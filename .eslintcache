[{"/home/abhishek/Internships/Atlan/fetcher/src/index.js":"1","/home/abhishek/Internships/Atlan/fetcher/src/Pages/App.js":"2","/home/abhishek/Internships/Atlan/fetcher/src/Context/TabContext.js":"3","/home/abhishek/Internships/Atlan/fetcher/src/utils/Matches.js":"4","/home/abhishek/Internships/Atlan/fetcher/src/components/NavTabs.js":"5","/home/abhishek/Internships/Atlan/fetcher/src/utils/Player.js":"6","/home/abhishek/Internships/Atlan/fetcher/src/components/MatchCard.js":"7","/home/abhishek/Internships/Atlan/fetcher/src/components/PlayerCard.js":"8","/home/abhishek/Internships/Atlan/fetcher/src/components/Filter.js":"9","/home/abhishek/Internships/Atlan/fetcher/src/Context/YearContext.js":"10","/home/abhishek/Internships/Atlan/fetcher/src/Context/TeamContext.js":"11","/home/abhishek/Internships/Atlan/fetcher/src/components/MainFrame.js":"12","/home/abhishek/Internships/Atlan/fetcher/src/Context/QueryContext.js":"13"},{"size":203,"mtime":1607786876108,"results":"14","hashOfConfig":"15"},{"size":635,"mtime":1608200513844,"results":"16","hashOfConfig":"15"},{"size":398,"mtime":1608186518864,"results":"17","hashOfConfig":"15"},{"size":2157,"mtime":1608205657480,"results":"18","hashOfConfig":"15"},{"size":2423,"mtime":1608200227144,"results":"19","hashOfConfig":"15"},{"size":456,"mtime":1608198841208,"results":"20","hashOfConfig":"15"},{"size":1194,"mtime":1608198612796,"results":"21","hashOfConfig":"15"},{"size":1195,"mtime":1608198660160,"results":"22","hashOfConfig":"15"},{"size":4696,"mtime":1608198551532,"results":"23","hashOfConfig":"15"},{"size":433,"mtime":1608202622020,"results":"24","hashOfConfig":"15"},{"size":433,"mtime":1608202616180,"results":"25","hashOfConfig":"15"},{"size":5367,"mtime":1608205565700,"results":"26","hashOfConfig":"15"},{"size":407,"mtime":1608204359944,"results":"27","hashOfConfig":"15"},{"filePath":"28","messages":"29","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"30"},"1tv3v1x",{"filePath":"31","messages":"32","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"30"},{"filePath":"33","messages":"34","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"30"},{"filePath":"35","messages":"36","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"37","usedDeprecatedRules":"30"},{"filePath":"38","messages":"39","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"30"},{"filePath":"40","messages":"41","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"30"},{"filePath":"42","messages":"43","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"30"},{"filePath":"44","messages":"45","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"46"},{"filePath":"47","messages":"48","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"30"},{"filePath":"49","messages":"50","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"30"},{"filePath":"51","messages":"52","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"30"},{"filePath":"53","messages":"54","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"55","usedDeprecatedRules":"30"},{"filePath":"56","messages":"57","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"30"},"/home/abhishek/Internships/Atlan/fetcher/src/index.js",[],["58","59"],"/home/abhishek/Internships/Atlan/fetcher/src/Pages/App.js",[],"/home/abhishek/Internships/Atlan/fetcher/src/Context/TabContext.js",[],"/home/abhishek/Internships/Atlan/fetcher/src/utils/Matches.js",["60"],"import React, { useEffect, useState, useContext } from 'react'\nimport Grid from '@material-ui/core/Grid';\nimport MatchCard from '../components/MatchCard';\nimport MatchData from \"../Data/matches.json\"\nimport { YearContext } from '../Context/YearContext';\nimport { TeamContext } from '../Context/TeamContext';\nimport { QueryContext } from '../Context/QueryContext';\n\n\nfunction Matches() {\n  const [year_checked] = useContext(YearContext);\n  const [team_checked] = useContext(TeamContext);\n  const [matches, setMatches] = useState(MatchData);\n  const [query] = useContext(QueryContext)\n\n  useEffect(() => {\n    if (query.length > 0) {\n      let newMatches = []\n      const getResuts = (main, query) => {\n        main.forEach(match => {\n          if (query === match.team2 || query === match.team1) {\n            newMatches.push(match);\n          }\n        })\n      }\n      // console.log(\"query to be searched: \", query);\n      getResuts(matches, query);\n      setMatches(newMatches);\n      // console.log(\"New Matches: \", newMatches);\n    } else {\n      setMatches(MatchData);\n    }\n  }, [query])\n\n  useEffect(() => {\n    if (team_checked.length > 0 || year_checked.length > 0) {\n      let newMatches = []\n\n      const YearFilteredMatches = (main, checker) => {\n        main.forEach(match => {\n          const element = match.Season;\n          if (checker.includes(element)) {\n            newMatches.push(match);\n          }\n        });\n      }\n      const TeamFilteredMatches = (main, checker) => {\n        main.forEach(match => {\n          if (checker.includes(match.team2) || checker.includes(match.team1)) {\n            newMatches.push(match);\n          }\n        });\n      }\n\n      const team_arr = team_checked.map(ele => ele.team)\n      TeamFilteredMatches(MatchData, team_arr)\n      YearFilteredMatches(MatchData, year_checked)\n      setMatches(newMatches);\n    } else {\n      setMatches(MatchData);\n    }\n  }, [team_checked, year_checked])\n\n  return (\n    <Grid container spacing={3}>\n      {matches.map((match) => (\n        <Grid item xs={4}>\n          <MatchCard match={match} />\n        </Grid>\n      ))}\n    </Grid>\n  )\n}\n\nexport default Matches\n","/home/abhishek/Internships/Atlan/fetcher/src/components/NavTabs.js",[],"/home/abhishek/Internships/Atlan/fetcher/src/utils/Player.js",[],"/home/abhishek/Internships/Atlan/fetcher/src/components/MatchCard.js",[],"/home/abhishek/Internships/Atlan/fetcher/src/components/PlayerCard.js",[],["61","62"],"/home/abhishek/Internships/Atlan/fetcher/src/components/Filter.js",[],"/home/abhishek/Internships/Atlan/fetcher/src/Context/YearContext.js",[],"/home/abhishek/Internships/Atlan/fetcher/src/Context/TeamContext.js",[],"/home/abhishek/Internships/Atlan/fetcher/src/components/MainFrame.js",["63"],"import React, { useState, useContext } from 'react';\nimport PropTypes from 'prop-types';\nimport AppBar from '@material-ui/core/AppBar';\nimport CssBaseline from '@material-ui/core/CssBaseline';\nimport Drawer from '@material-ui/core/Drawer';\nimport Hidden from '@material-ui/core/Hidden';\nimport IconButton from '@material-ui/core/IconButton';\nimport MenuIcon from '@material-ui/icons/Menu';\nimport Toolbar from '@material-ui/core/Toolbar';\nimport Typography from '@material-ui/core/Typography';\nimport { fade, makeStyles, useTheme } from '@material-ui/core/styles';\nimport NavTabs from './NavTabs';\nimport { Button, InputBase } from '@material-ui/core';\nimport Filter from './Filter';\nimport SearchIcon from '@material-ui/icons/Search';\nimport { QueryContext } from '../Context/QueryContext';\n\n\nconst drawerWidth = 240;\nconst useStyles = makeStyles((theme) => ({\n  root: {\n    display: 'flex',\n  },\n  drawer: {\n    [theme.breakpoints.up('sm')]: {\n      width: drawerWidth,\n      flexShrink: 0,\n    },\n  },\n  appBar: {\n    [theme.breakpoints.up('sm')]: {\n      width: `calc(100% - ${drawerWidth}px)`,\n      marginLeft: drawerWidth,\n    },\n  },\n  menuButton: {\n    marginRight: theme.spacing(2),\n    [theme.breakpoints.up('sm')]: {\n      display: 'none',\n    },\n  },\n  // necessary for content to be below app bar\n  toolbar: theme.mixins.toolbar,\n  drawerPaper: {\n    width: drawerWidth,\n  },\n  content: {\n    flexGrow: 1,\n    padding: theme.spacing(3),\n  }, search: {\n    position: 'relative',\n    borderRadius: theme.shape.borderRadius,\n    backgroundColor: fade(theme.palette.common.white, 0.15),\n    '&:hover': {\n      backgroundColor: fade(theme.palette.common.white, 0.25),\n    },\n    marginLeft: 0,\n    width: '100%',\n    [theme.breakpoints.up('sm')]: {\n      marginLeft: theme.spacing(1),\n      width: 'auto',\n    },\n  },\n  searchIcon: {\n    padding: theme.spacing(0, 2),\n    height: '100%',\n    position: 'absolute',\n    pointerEvents: 'none',\n    display: 'flex',\n    alignItems: 'center',\n    justifyContent: 'center',\n  },\n  inputRoot: {\n    color: 'inherit',\n  },\n  inputInput: {\n    padding: theme.spacing(1, 1, 1, 0),\n    // vertical padding + font size from searchIcon\n    paddingLeft: `calc(1em + ${theme.spacing(4)}px)`,\n    transition: theme.transitions.create('width'),\n    width: '100%',\n    [theme.breakpoints.up('sm')]: {\n      width: '12ch',\n      '&:focus': {\n        width: '20ch',\n      },\n    },\n  },\n\n}));\n\nfunction MainFrame(props) {\n  const { window } = props;\n  const classes = useStyles();\n  const theme = useTheme();\n  const [mobileOpen, setMobileOpen] = useState(false);\n  const [input, setInput] = useState(\"\")\n  const [data, setData] = useContext(QueryContext)\n\n  const handleDrawerToggle = () => {\n    setMobileOpen(!mobileOpen);\n  };\n\n  const drawer = (\n    <>\n      <Button variant=\"contained\" color=\"secondary\">Facet Filters</Button>\n      <br />\n      <div className={classes.root}>\n        <Filter />\n      </div>\n    </>\n  );\n\n  const container = window !== undefined ? () => window().document.body : undefined;\n  const handleSearch = (e) => {\n    setInput(e.target.value)\n  }\n  const makeQuery = (e) => {\n    e.preventDefault()\n    setData(input)\n    setInput(\"\")\n  }\n\n  return (\n    <div className={classes.root}>\n      <CssBaseline />\n      <AppBar position=\"fixed\" className={classes.appBar} color=\"secondary\">\n        <Toolbar >\n          <IconButton\n            color=\"inherit\"\n            aria-label=\"open drawer\"\n            edge=\"start\"\n            onClick={handleDrawerToggle}\n            className={classes.menuButton}\n          >\n            <MenuIcon />\n          </IconButton>\n          <Typography variant=\"h6\" noWrap >\n            <b>IPL Fetcher</b> - <i>Getting data like never before</i>\n          </Typography>\n          <form onSubmit={makeQuery} className={classes.search}>\n            <div className={classes.searchIcon}>\n              <SearchIcon />\n            </div>\n            <InputBase\n              value={input}\n              onChange={handleSearch}\n              placeholder=\"Search…\"\n              classes={{\n                root: classes.inputRoot,\n                input: classes.inputInput,\n              }}\n              inputProps={{ 'aria-label': 'search' }}\n            />\n          </form>\n        </Toolbar>\n      </AppBar>\n      <nav className={classes.drawer} aria-label=\"mailbox folders\">\n        <Hidden smUp implementation=\"css\">\n          <Drawer\n            container={container}\n            variant=\"temporary\"\n            anchor={theme.direction === 'rtl' ? 'right' : 'left'}\n            open={mobileOpen}\n            onClose={handleDrawerToggle}\n            classes={{\n              paper: classes.drawerPaper,\n            }}\n            ModalProps={{\n              keepMounted: true,\n            }}\n          >\n            {drawer}\n          </Drawer>\n        </Hidden>\n        <Hidden xsDown implementation=\"css\">\n          <Drawer\n            classes={{\n              paper: classes.drawerPaper,\n            }}\n            variant=\"permanent\"\n            open\n          >\n            {drawer}\n          </Drawer>\n        </Hidden>\n      </nav>\n      <NavTabs />\n    </div>\n  );\n}\n\nMainFrame.propTypes = {\n  /**\n   * Injected by the documentation to work in an iframe.\n   * You won't need it on your project.\n   */\n  window: PropTypes.func,\n};\n\nexport default MainFrame;\n","/home/abhishek/Internships/Atlan/fetcher/src/Context/QueryContext.js",[],{"ruleId":"64","replacedBy":"65"},{"ruleId":"66","replacedBy":"67"},{"ruleId":"68","severity":1,"message":"69","line":33,"column":6,"nodeType":"70","endLine":33,"endColumn":13,"suggestions":"71"},{"ruleId":"64","replacedBy":"72"},{"ruleId":"66","replacedBy":"73"},{"ruleId":"74","severity":1,"message":"75","line":98,"column":10,"nodeType":"76","messageId":"77","endLine":98,"endColumn":14},"no-native-reassign",["78"],"no-negated-in-lhs",["79"],"react-hooks/exhaustive-deps","React Hook useEffect has a missing dependency: 'matches'. Either include it or remove the dependency array.","ArrayExpression",["80"],["78"],["79"],"no-unused-vars","'data' is assigned a value but never used.","Identifier","unusedVar","no-global-assign","no-unsafe-negation",{"desc":"81","fix":"82"},"Update the dependencies array to be: [matches, query]",{"range":"83","text":"84"},[1086,1093],"[matches, query]"]