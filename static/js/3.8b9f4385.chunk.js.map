{"version":3,"sources":["../node_modules/@material-ui/core/esm/CardContent/CardContent.js","components/MatchCard.js","utils/Matches.js"],"names":["CardContent","React","props","ref","classes","className","_props$component","component","Component","other","_objectWithoutProperties","_extends","clsx","root","withStyles","padding","paddingBottom","name","useStyles","makeStyles","minWidth","bullet","display","margin","transform","title","fontSize","pos","marginBottom","MatchCard","Paper","Card","variant","Typography","color","gutterBottom","match","Season","date","team1","team2","city","venue","Matches","useContext","YearContext","year_checked","TeamContext","team_checked","useState","MatchData","matches","setMatches","QueryContext","query","useEffect","length","newMatches","main","forEach","push","getResuts","team_arr","map","ele","team","checker","includes","element","YearFilteredMatches","Grid","container","spacing","item","xs"],"mappings":"oGAAA,8CAeIA,EAA2BC,cAAiB,SAAqBC,EAAOC,GAC1E,IAAIC,EAAUF,EAAME,QAChBC,EAAYH,EAAMG,UAClBC,EAAmBJ,EAAMK,UACzBC,OAAiC,IAArBF,EAA8B,MAAQA,EAClDG,EAAQC,YAAyBR,EAAO,CAAC,UAAW,YAAa,cAErE,OAAoBD,gBAAoBO,EAAWG,YAAS,CAC1DN,UAAWO,YAAKR,EAAQS,KAAMR,GAC9BF,IAAKA,GACJM,OAgCUK,gBAnDK,CAElBD,KAAM,CACJE,QAAS,GACT,eAAgB,CACdC,cAAe,MA8Ca,CAChCC,KAAM,kBADOH,CAEZd,I,om/SCpDGkB,EAAYC,YAAW,CAC3BN,KAAM,CACJO,SAAU,KAEZC,OAAQ,CACNC,QAAS,eACTC,OAAQ,QACRC,UAAW,cAEbC,MAAO,CACLC,SAAU,IAEZC,IAAK,CACHC,aAAc,MAIH,SAASC,EAAU3B,GAChC,IAAME,EAAUc,IAEhB,OACE,cAACY,EAAA,EAAD,UACE,cAACC,EAAA,EAAD,CAAM1B,UAAWD,EAAQS,KAAMmB,QAAQ,WAAvC,SACE,eAAChC,EAAA,EAAD,WACE,eAACiC,EAAA,EAAD,CAAY5B,UAAWD,EAAQqB,MAAOS,MAAM,gBAAgBC,cAAY,EAAxE,UACCjC,EAAMkC,MAAMC,OADb,MACwBnC,EAAMkC,MAAME,QAEpC,eAACL,EAAA,EAAD,CAAYD,QAAQ,KAAKzB,UAAU,KAAnC,UACCL,EAAMkC,MAAMG,MADb,OACwBrC,EAAMkC,MAAMI,SAEpC,eAACP,EAAA,EAAD,CAAYD,QAAQ,QAAQzB,UAAU,IAAtC,UACGL,EAAMkC,MAAMK,KACf,uBACGvC,EAAMkC,MAAMM,gB,qCCkCVC,UAjEf,WAAoB,IAAD,EACMC,qBAAWC,KAA3BC,EADU,sBAEMF,qBAAWG,KAA3BC,EAFU,sBAGaC,mBAASC,GAHtB,mBAGVC,EAHU,KAGDC,EAHC,OAIDR,qBAAWS,KAApBC,EAJU,oBAsDjB,OAhDAC,qBAAU,WACR,GAAID,EAAME,OAAS,EAAG,CACpB,IAAIC,EAAa,IACC,SAACC,EAAMJ,GACvBI,EAAKC,SAAQ,SAAAvB,GACPkB,IAAUlB,EAAMI,OAASc,IAAUlB,EAAMG,OAC3CkB,EAAWG,KAAKxB,MAKtByB,CAAUV,EAASG,GACnBF,EAAWK,QAGXL,EAAWF,KAEZ,CAACI,IAEJC,qBAAU,WACR,GAAIP,EAAaQ,OAAS,GAAKV,EAAaU,OAAS,EAAG,CACtD,IAAIC,EAAa,GAkBXK,EAAWd,EAAae,KAAI,SAAAC,GAAG,OAAIA,EAAIC,QARVC,EASJJ,EAAXZ,EARbS,SAAQ,SAAAvB,IACP8B,EAAQC,SAAS/B,EAAMI,QAAU0B,EAAQC,SAAS/B,EAAMG,SAC1DkB,EAAWG,KAAKxB,MAXM,SAACsB,EAAMQ,GACjCR,EAAKC,SAAQ,SAAAvB,GACX,IAAMgC,EAAUhC,EAAMC,OAClB6B,EAAQC,SAASC,IACnBX,EAAWG,KAAKxB,MActBiC,CAAoBnB,EAAWJ,GAC/BM,EAAWK,QAEXL,EAAWF,GAbiB,IAAOgB,IAepC,CAAClB,EAAcF,IAGhB,cAACwB,EAAA,EAAD,CAAMC,WAAS,EAACC,QAAS,EAAzB,SACGrB,EAAQY,KAAI,SAAC3B,GAAD,OACX,cAACkC,EAAA,EAAD,CAAMG,MAAI,EAACC,GAAI,EAAf,SACE,cAAC7C,EAAD,CAAWO,MAAOA","file":"static/js/3.8b9f4385.chunk.js","sourcesContent":["import _extends from \"@babel/runtime/helpers/esm/extends\";\nimport _objectWithoutProperties from \"@babel/runtime/helpers/esm/objectWithoutProperties\";\nimport * as React from 'react';\nimport PropTypes from 'prop-types';\nimport clsx from 'clsx';\nimport withStyles from '../styles/withStyles';\nexport var styles = {\n  /* Styles applied to the root element. */\n  root: {\n    padding: 16,\n    '&:last-child': {\n      paddingBottom: 24\n    }\n  }\n};\nvar CardContent = /*#__PURE__*/React.forwardRef(function CardContent(props, ref) {\n  var classes = props.classes,\n      className = props.className,\n      _props$component = props.component,\n      Component = _props$component === void 0 ? 'div' : _props$component,\n      other = _objectWithoutProperties(props, [\"classes\", \"className\", \"component\"]);\n\n  return /*#__PURE__*/React.createElement(Component, _extends({\n    className: clsx(classes.root, className),\n    ref: ref\n  }, other));\n});\nprocess.env.NODE_ENV !== \"production\" ? CardContent.propTypes = {\n  // ----------------------------- Warning --------------------------------\n  // | These PropTypes are generated from the TypeScript type definitions |\n  // |     To update them edit the d.ts file and run \"yarn proptypes\"     |\n  // ----------------------------------------------------------------------\n\n  /**\n   * The content of the component.\n   */\n  children: PropTypes.node,\n\n  /**\n   * Override or extend the styles applied to the component.\n   * See [CSS API](#css) below for more details.\n   */\n  classes: PropTypes.object,\n\n  /**\n   * @ignore\n   */\n  className: PropTypes.string,\n\n  /**\n   * The component used for the root node.\n   * Either a string to use a HTML element or a component.\n   */\n  component: PropTypes\n  /* @typescript-to-proptypes-ignore */\n  .elementType\n} : void 0;\nexport default withStyles(styles, {\n  name: 'MuiCardContent'\n})(CardContent);","import React from 'react';\nimport { makeStyles } from '@material-ui/core/styles';\nimport Card from '@material-ui/core/Card';\nimport CardContent from '@material-ui/core/CardContent';\nimport Typography from '@material-ui/core/Typography';\nimport Paper from '@material-ui/core/Paper';\n\nconst useStyles = makeStyles({\n  root: {\n    minWidth: 275,\n  },\n  bullet: {\n    display: 'inline-block',\n    margin: '0 2px',\n    transform: 'scale(0.8)',\n  },\n  title: {\n    fontSize: 14,\n  },\n  pos: {\n    marginBottom: 12,\n  },\n});\n\nexport default function MatchCard(props) {\n  const classes = useStyles();\n\n  return (\n    <Paper>\n      <Card className={classes.root} variant=\"outlined\">\n        <CardContent>\n          <Typography className={classes.title} color=\"textSecondary\" gutterBottom>\n          {props.match.Season} - {props.match.date}\n        </Typography>\n          <Typography variant=\"h6\" component=\"h6\">\n          {props.match.team1} VS {props.match.team2}\n        </Typography>\n          <Typography variant=\"body2\" component=\"p\">\n            {props.match.city}\n          <br />\n            {props.match.venue}\n          </Typography>\n        </CardContent>\n      </Card>\n    </Paper>\n  );\n}\n","import React, { useEffect, useState, useContext } from 'react'\nimport Grid from '@material-ui/core/Grid';\nimport MatchCard from '../components/MatchCard';\nimport MatchData from \"../Data/matches.json\"\nimport { YearContext } from '../Context/YearContext';\nimport { TeamContext } from '../Context/TeamContext';\nimport { QueryContext } from '../Context/QueryContext';\n\n\nfunction Matches() {\n  const [year_checked] = useContext(YearContext);\n  const [team_checked] = useContext(TeamContext);\n  const [matches, setMatches] = useState(MatchData);\n  const [query] = useContext(QueryContext)\n\n  useEffect(() => {\n    if (query.length > 0) {\n      let newMatches = []\n      const getResuts = (main, query) => {\n        main.forEach(match => {\n          if (query === match.team2 || query === match.team1) {\n            newMatches.push(match);\n          }\n        })\n      }\n      // console.log(\"query to be searched: \", query);\n      getResuts(matches, query);\n      setMatches(newMatches);\n      // console.log(\"New Matches: \", newMatches);\n    } else {\n      setMatches(MatchData);\n    }\n  }, [query])\n\n  useEffect(() => {\n    if (team_checked.length > 0 || year_checked.length > 0) {\n      let newMatches = []\n\n      const YearFilteredMatches = (main, checker) => {\n        main.forEach(match => {\n          const element = match.Season;\n          if (checker.includes(element)) {\n            newMatches.push(match);\n          }\n        });\n      }\n      const TeamFilteredMatches = (main, checker) => {\n        main.forEach(match => {\n          if (checker.includes(match.team2) || checker.includes(match.team1)) {\n            newMatches.push(match);\n          }\n        });\n      }\n\n      const team_arr = team_checked.map(ele => ele.team)\n      TeamFilteredMatches(MatchData, team_arr)\n      YearFilteredMatches(MatchData, year_checked)\n      setMatches(newMatches);\n    } else {\n      setMatches(MatchData);\n    }\n  }, [team_checked, year_checked])\n\n  return (\n    <Grid container spacing={3}>\n      {matches.map((match) => (\n        <Grid item xs={4}>\n          <MatchCard match={match} />\n        </Grid>\n      ))}\n    </Grid>\n  )\n}\n\nexport default Matches\n"],"sourceRoot":""}